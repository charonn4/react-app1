{"version":3,"file":"static/js/546.75a4a651.chunk.js","mappings":"gKACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA2G,0BAA3G,EAAgJ,0BCAhJ,EAAyB,2B,mBCYzB,EATmB,SAACA,GAChB,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKC,IAAKH,EAAMI,IAAKC,IAAI,MACzB,SAAC,KAAD,CAASC,GAAI,YAAcN,EAAMO,GAAjC,SAAsCP,EAAMQ,WCPxD,EAA0B,yBCQ1B,EANgB,SAACR,GACb,OACI,gBAAKC,UAAWC,EAAhB,SAAgCF,EAAMS,W,oBCoC9C,EAlCgB,SAACT,GACb,IAAIU,EAAkBV,EAAMW,QACvBC,KAAK,SAAAC,GAAC,OAAK,SAAC,EAAD,CAAYL,KAAMK,EAAEL,KAAiBD,GAAIM,EAAEN,GAAIH,IAAKS,EAAET,KAAvBS,EAAEN,OAE7CO,EAAmBd,EAAMe,SACxBH,KAAK,SAACI,GAAD,OAAQ,SAAC,EAAD,CAASP,QAASO,EAAEP,SAAcO,EAAET,OAElDU,GAAiBC,EAAAA,EAAAA,QAAO,MAO5B,OACI,iBAAKjB,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SAEQQ,KAGR,iBAAKT,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SAEQY,KAGR,SAACK,EAAA,EAAD,CAAqBC,uBAAuBC,EAAAA,EAAAA,GAAiB,IAAKC,SAlB1D,SAACC,GACjBvB,EAAMwB,WAAWD,EAAOE,iBAiB2EA,eAAgBzB,EAAM0B,eAAgBC,eAAgBV,EAC5HO,WAAYxB,EAAMwB,WAAYI,OAAO,OAAOC,QAAQ,6G,8BCNzF,GAJyBC,E,QAAAA,KACrBC,EAAAA,EAAAA,KAlBkB,SAACC,GACnB,MAAM,CACFC,YAAaD,EAAMC,YACnBtB,QAASqB,EAAMC,YAAYtB,QAC3BI,SAAUiB,EAAMC,YAAYlB,SAC5BW,eAAgBM,EAAMC,YAAYP,mBAIjB,SAACQ,GACtB,MAAM,CACFV,WAAY,SAACC,GACTS,GAASC,EAAAA,EAAAA,GAAwBV,SAOzCW,EAAAA,EAFqBN,CAEHO,I,iEC1BtB,EAA2B,6BAA3B,EAAmE,6BCAnE,EAAsB,oB,SCUtB,EARe,SAACrC,GACZ,OACI,mBAAQsC,QAAStC,EAAMsC,QAASrC,UAAWC,EAA3C,SACKF,EAAMuC,Y,uCCqBnB,GAJ4BC,EAAAA,EAAAA,GAAU,CAACC,KAAM,cAAjBD,EAfT,SAACxC,GAChB,OACI,kBAAMsB,SAAUtB,EAAM0C,aAAtB,WACI,gBAAKzC,UAAWC,EAAhB,UACI,SAACyC,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,EAAU7C,EAAMoB,uBAAwB0B,UAAWC,EAAAA,GAAUvC,KAAK,iBAAiBwC,IAAKhD,EAAM2B,eAAgBsB,YAAajD,EAAM6B,QAASqB,MAAOlD,EAAMyB,oBAE7K,gBAAKxB,UAAWC,EAAhB,UACI,SAAC,EAAD,UAASF,EAAM4B","sources":["webpack://my-app/./src/components/macroComponents/Dialogs/Dialogs.module.css?c0ae","webpack://my-app/./src/components/macroComponents/Dialogs/DialogItem/DialogItem.module.css?2074","components/macroComponents/Dialogs/DialogItem/DialogItem.jsx","webpack://my-app/./src/components/macroComponents/Dialogs/Message/Message.module.css?d677","components/macroComponents/Dialogs/Message/Message.jsx","components/macroComponents/Dialogs/Dialogs.jsx","components/macroComponents/Dialogs/DialogsContainer.jsx","webpack://my-app/./src/components/microComponents/AddContent/AddContent.module.css?10fb","webpack://my-app/./src/components/microComponents/AddBtn/AddBtn.module.css?1faa","components/microComponents/AddBtn/AddBtn.jsx","components/microComponents/AddContent/AddContent.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__-G8Vw\",\"dialogsItems\":\"Dialogs_dialogsItems__bobOt\",\"messages\":\"Dialogs_messages__aApEE\",\"chatElem\":\"Dialogs_chatElem__J2mFO\",\"active\":\"Dialogs_active__c0BeU\",\"chatInput\":\"Dialogs_chatInput__bKX0X\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__oWT85\"};","import React from \"react\";\r\nimport style from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) =>{\r\n    return(\r\n        <div className={style.dialog}>\r\n            <img src={props.img} alt=\"\"/>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__-1y8m\"};","import React from \"react\";\r\nimport style from './Message.module.css'\r\n\r\nconst Message = (props) =>{\r\n    return(\r\n        <div className={style.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React, {useRef} from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddContentFormRedux from \"../../microComponents/AddContent/AddContent\";\r\nimport {maxLengthCreator} from \"../../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) =>{\r\n    let dialogsElements = props.dialogs\r\n        .map( d =>  <DialogItem name={d.name} key={d.id} id={d.id} img={d.img}></DialogItem>  )\r\n\r\n    let messagesElements = props.messages\r\n        .map( (m) =>  <Message message={m.message} key={m.id}></Message> )\r\n\r\n    let newMessageElem = useRef(null)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newContentText)\r\n    }\r\n\r\n\r\n    return(\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {\r\n                    dialogsElements\r\n                }\r\n            </div>\r\n            <div className={style.messages}>\r\n                <div className={style.chatElem}>\r\n                    {\r\n                        messagesElements\r\n                    }\r\n                </div>\r\n                <AddContentFormRedux maxLengthCreatorPosts={maxLengthCreator(20)} onSubmit={addNewMessage} newContentText={props.newMessageText} newContentElem={newMessageElem}\r\n                                     addMessage={props.addMessage} addBtn='Send' pHolder='Введите сообщение'></AddContentFormRedux>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {addMessageActionCreator} from \"../../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addMessage: (newContentText) => {\r\n            dispatch(addMessageActionCreator(newContentText))\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)\r\n\r\nexport default DialogsContainer\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dropPost\":\"AddContent_dropPost__0k+o1\",\"btnBlock\":\"AddContent_btnBlock__dNiW1\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"AddBtn_btn__MSLeV\"};","import React from \"react\";\r\nimport style from './AddBtn.module.css'\r\n\r\nconst AddBtn = (props) =>{\r\n    return(\r\n        <button onClick={props.onClick} className={style.btn}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AddBtn","import React from \"react\";\r\nimport style from './AddContent.module.css'\r\nimport AddBtn from \"../AddBtn/AddBtn\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../FormsControls/FormsControls\";\r\n// import RemoveBtn from \"../RemoveBtn/RemoveBtn\";\r\n\r\nconst AddContent = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={style.dropPost}>\r\n                <Field validate={[required, props.maxLengthCreatorPosts]} component={Textarea} name='newContentText' ref={props.newContentElem} placeholder={props.pHolder} value={props.newContentText}/>\r\n            </div>\r\n            <div className={style.btnBlock}>\r\n                <AddBtn>{props.addBtn}</AddBtn>\r\n                {/*<RemoveBtn>{props.removeBtn}</RemoveBtn>*/}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst AddContentFormRedux = reduxForm({form: 'AddContent'})(AddContent)\r\n\r\n\r\n\r\nexport default AddContentFormRedux"],"names":["props","className","style","src","img","alt","to","id","name","message","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageElem","useRef","AddContent","maxLengthCreatorPosts","maxLengthCreator","onSubmit","values","addMessage","newContentText","newMessageText","newContentElem","addBtn","pHolder","compose","connect","state","dialogsPage","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs","onClick","children","reduxForm","form","handleSubmit","Field","validate","required","component","Textarea","ref","placeholder","value"],"sourceRoot":""}